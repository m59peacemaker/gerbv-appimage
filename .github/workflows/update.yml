name: update
on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 */6 * * *"
defaults:
  run:
    working-directory: /tmp
env:
  WORKDIR: /tmp
  SOURCE_NAME: gerbv
  SOURCE_DIR: ${{ github.workspace }}/submodules/gerbv
jobs:
  update:
    runs-on: "ubuntu-16.04"
    steps:
      - if: env.GITHUB_ACTOR != 'nektos/act'
        run: ci/setup

      - if: env.GITHUB_ACTOR != 'nektos/act'
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          path: ${{ github.workspace }}
          fetch-depth: 0
          submodules: recursive

      - uses: actions/setup-node@v1.4.2
        with:
          node-version: 14

      - run: git --version

      - id: set_build_tag
        run: (cd "${GITHUB_WORKSPACE}/ci" && npm install && ./scripts/set_build_tag.js)

      - id: build
        if: steps.set_build_tag.outputs.build_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_TAG_SOURCE: ${{ steps.set_build_tag.outputs.build_source_tag }}
          BUILD_TAG: ${{ steps.set_build_tag.outputs.build_tag }}
        run: cd "${SOURCE_DIR}" && ${{ github.workspace }}/ci/scripts/build.sh

      - if: env.GITHUB_ACTOR == 'nektos/act'
        run: echo "AppImage_path=${{ steps.build.outputs.AppImage_path }}"; echo "Success! Exiting with failure code for early termination in development..."; exit 1;

      - id: create_release
        if: steps.build.outputs.AppImage_path
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.set_build_tag.outputs.build_tag }}
          release_name: ${{ steps.set_build_tag.outputs.build_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: upload-appimage
        if: steps.create_release.outputs.upload_url && steps.build.outputs.AppImage_path
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.AppImage_path }}
          asset_name: ${{ steps.build.outputs.AppImage_name }}
          asset_content_type: application/vnd.appimage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
